{"componentChunkName":"component---src-templates-tag-template-js","path":"/tag/javascript","result":{"data":{"site":{"siteMetadata":{"title":"Blog by Jeong Jihun","subtitle":"안녕하세요! 항상 유저의 관점에서 생각하고 더 나은 유저 경험을 위해 노력하는 개발자 정지훈입니다."}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/posts/JavaScript-Naming-Convention-Best-Practices","categorySlug":"/category/javascript/"},"frontmatter":{"title":"JavaScript Naming Convention Best Practices","date":"2020-06-23","category":"Javascript","description":"Javascript Naming Convention 에 대해 알아보겠습니다."}}},{"node":{"fields":{"slug":"/posts/Causes-of-Memory-Leaks-in-JavaScript-and-How-to-Avoid-Them","categorySlug":"/category/javascript/"},"frontmatter":{"title":"JavaScript에서 메모리 누수의 원인 및 해결 방법","date":"2020-06-20","category":"Javascript","description":"SPA (Single Page Application)의 등장으로 우리는 좋은 메모리 관련 코딩 방법에 더 많은 관심을 기울이게 되었습니다. SPA를 사용하면 같은 페이지에 훨씬 더 오래 머무를 수 있습니다. 완전히 다시 로드되지 않은 페이지가 점점 더 많은 메모리를 사용하여 점진적으로 시작되면 성능에 심각한 영향을 미치고 브라우저 탭이 충돌할 수도 있습니다."}}},{"node":{"fields":{"slug":"/posts/What-is-the-AST?","categorySlug":"/category/javascript/"},"frontmatter":{"title":"AST란 무엇일까요?","date":"2020-06-18","category":"Javascript","description":"프로그래밍 언어의 문법에 따라 소스 코드 구조를 표시하는 계층적 프로그램 표현입니다. Lexical and Syntax Analysis, 두 단계는 코드를 기반으로 AST를 생성하는 데 있어 주요 역할을 담당하고 있습니다."}}}]}},"pageContext":{"tag":"Javascript","currentPage":0,"postsLimit":4,"postsOffset":0,"prevPagePath":"/tag/javascript","nextPagePath":"/tag/javascript/page/1","hasPrevPage":false,"hasNextPage":false}}}