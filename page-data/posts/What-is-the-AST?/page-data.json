{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/What-is-the-AST?","result":{"data":{"markdownRemark":{"id":"cc5df4e4-0dc1-55fb-b28e-a50167738a8e","html":"<h2 id=\"ast란-무엇일까요\" style=\"position:relative;\"><a href=\"#ast%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%BC%EA%B9%8C%EC%9A%94\" aria-label=\"ast란 무엇일까요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AST란 무엇일까요?</h2>\n<p>프로그래밍 언어의 문법에 따라 소스 코드 구조를 표시하는 계층적 프로그램 표현입니다.</p>\n<p>Lexical and Syntax Analysis, 두 단계는 코드를 기반으로 AST를 생성하는 데 있어 주요 역할을 담당하고 있습니다.</p>\n<p><strong>Lexical analyzer(Scanner)</strong></p>\n<ul>\n<li>정의 된 규칙을 사용하여 문자 스트림(코드)을 읽고 이를 토큰으로 결합합니다. 공백 문자, 주석 등도 제거합니다. 결국 전체 코드 문자열이 토큰 목록으로 분할됩니다.</li>\n<li>소스 코드를 읽을 때 코드를 문자 단위로 하나하나 스캔하며 공백, 연산자 기호 또는 특수 기호를 발견하면 단어가 완성되었다고 봅니다.</li>\n</ul>\n<p><strong>Syntax analyzer(Parser)</strong></p>\n<ul>\n<li>어휘 분석 후 만들어진 플랫한 토큰 목록을 가져 와서 언어 구문을 검증하고 (구문 오류가 있다면 에러를 표시하는) 트리 구조로 변환합니다.</li>\n</ul>\n<p><a href=\"https://gyujincho.github.io/2018-06-19/AST-for-JS-devlopers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">자바스크립트 개발자를 위한 AST(번역)</a></p>","fields":{"slug":"/posts/What-is-the-AST?","tagSlugs":["/tag/ast/","/tag/javascript/"]},"frontmatter":{"date":"2020-06-18","description":"프로그래밍 언어의 문법에 따라 소스 코드 구조를 표시하는 계층적 프로그램 표현입니다. Lexical and Syntax Analysis, 두 단계는 코드를 기반으로 AST를 생성하는 데 있어 주요 역할을 담당하고 있습니다.","tags":["AST","Javascript"],"title":"AST란 무엇일까요?","socialImage":""}}},"pageContext":{"slug":"/posts/What-is-the-AST?"}}}