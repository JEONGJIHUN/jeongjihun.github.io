{"componentChunkName":"component---src-templates-category-template-js","path":"/category/javascript/page/1","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"fields":{"categorySlug":"/category/javascript/","slug":"/posts/Javascript"},"frontmatter":{"date":"2020-05-28","description":"자바스크립트는 프로토타입 기반 언어로 객체 지향 프로그래밍의 한 형태로 클래스가 없고, 클래스 기반 언어에서 상속을 사용하는 것과 다르게, 객체를 프로토타입으로 하여 복제의 과정을 통하여 객체의 동작 방식을 다시 사용할 수 있다.","category":"Javascript","title":"Javascript"}}},{"node":{"fields":{"categorySlug":"/category/javascript/","slug":"/posts/Generator & RxJS"},"frontmatter":{"date":"2019-12-30","description":"제너레이터의 간단한 구조 및 예시를 소개한 다음, RxJS 에 대한 간략한 설명과 예시로 마치겠습니다.","category":"Javascript","title":"Generator & RxJS"}}},{"node":{"fields":{"categorySlug":"/category/javascript/","slug":"/posts/Promise & Async/await"},"frontmatter":{"date":"2019-12-23","description":"자바스크립트에 대한 간략한 설명과 callback 에 대해 설명.그 후, Promise 와 Async/await 에 대해 알아보려고 합니다.","category":"Javascript","title":"Promise & Async/await"}}}]}},"pageContext":{"category":"Javascript","currentPage":1,"postsLimit":4,"postsOffset":4,"prevPagePath":"/category/javascript","nextPagePath":"/category/javascript/page/2","hasPrevPage":true,"hasNextPage":false}}}